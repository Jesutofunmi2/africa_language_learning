openapi: 3.0.3
info:
  title: 'Laravel Task API'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://127.0.0.1:8000'
paths:
  /api/v1/activity:
    get:
      summary: 'Get Activity Endpoint.'
      description: 'This endpoint handles getting user activities.'
      parameters:
        -
          in: query
          name: from_date
          description: 'date Filter activities from date'
          example: beatae
          required: false
          schema:
            type: string
            description: 'date Filter activities from date'
            example: beatae
        -
          in: query
          name: to_date
          description: 'date Filter activities to date'
          example: vitae
          required: false
          schema:
            type: string
            description: 'date Filter activities to date'
            example: vitae
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Activity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2022-08-01T09:54:38'
                to_date:
                  type: string
                  description: 'This field is required unless <code>from_date</code> is in <code>null</code>.  Must be a valid date.'
                  example: '2022-08-01T09:54:38'
              required:
                - from_date
  /api/v1/auth/login:
    post:
      summary: 'Login Endpoint.'
      description: 'This endpoint handles an authentication attempt.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: monty83@example.com
                password:
                  type: string
                  description: ''
                  example: enim
              required:
                - email
                - password
      security: []
  /api/v1/auth/register:
    post:
      summary: 'Register User Endpoint.'
      description: 'This endpoint handles user registration.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                  description: 'The last name of the user.'
                  example: repellat
                lastname:
                  type: string
                  description: 'Must not be greater than 254 characters.'
                  example: wtdramvceflpkouonkwyhpydddcsbuelxedyybiccdhhkkqkugpkzvaoapbubervpsffsiirneotqhqkhcwufperxiijbfdotxuanpchvbhjdbqmrntetsqumxgyhckuesakycsgsjhixs
                email:
                  type: string
                  description: 'The email of the of the user.'
                  example: adipisci
                password:
                  type: string
                  description: 'The user''s account password'
                  example: et
                confirm_password:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: officiis
                device_name:
                  type: string
                  description: ''
                  example: aut
              required:
                - firstname
                - lastname
                - email
                - password
                - confirm_password
      security: []
  /api/v1/auth/logout:
    post:
      summary: 'Logout token'
      description: "This endpoint handles logging a user out\nof the application."
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n     \"message\": \"Token deleted successfully.\",\n     \"data\": null,\n}"
      tags:
        - Auth
tags:
  -
    name: Activity
    description: ''
  -
    name: Auth
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
